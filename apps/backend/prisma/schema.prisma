generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String         @id @default(uuid())
  username          String         @unique
  email             String         @unique
  password          String
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  refreshToken      String?
  serverMemberships ServerMember[]
  messages          Message[]
}

model Server {
  id          String         @id @default(uuid())
  name        String
  creatorId   String
  creator     String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  members     ServerMember[]
  channels    Channel[]
  tags        String[]       @default([])
  whiteboards Whiteboard[]
}

model ServerMember {
  id         String   @id @default(uuid())
  userId     String
  serverId   String
  role       String?  @default("Member")
  user       User     @relation(fields: [userId], references: [id])
  server     Server   @relation(fields: [serverId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  activeVc   Channel? @relation("ServerMemberChannel", fields: [activeVcId], references: [id])
  activeVcId String?
}

model Channel {
  id        String         @id @default(uuid())
  name      String
  serverId  String
  type      String         @default("TEXT") // "TEXT", "VOICE" or "WHITEBOARD"
  data      Json           @default("{}") // Stores Excalidraw JSON data
  server    Server         @relation(fields: [serverId], references: [id])
  messages  Message[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  peers     ServerMember[] @relation("ServerMemberChannel")
}

model Message {
  id        String   @id @default(uuid())
  content   String
  userId    String
  username  String
  channelId String
  serverId  String
  user      User     @relation(fields: [userId], references: [id])
  channel   Channel  @relation(fields: [channelId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Whiteboard {
  id        String   @id @default(uuid())
  name      String
  serverId  String
  server    Server   @relation(fields: [serverId], references: [id])
  data      Json     @default("{}") // Stores Excalidraw JSON data
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
